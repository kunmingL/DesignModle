package com.km.decoratormodel;

/**
 * 装饰模式最大的作用 就是在不影响原先行为的基础上，
 * 在这个行为前后加上预处理或者后处理。
 *
 * 当然同一个类型的前后处理有多种的情况下，还可以将装饰类定义为抽象类
 * 再由具体的装饰类进行实现
 *
 * 装饰类与具体行为类 都同样继承一个接口
 * 在同一个实现方法 完成各自的操作
 * 装饰类如果要完成上述行为，必然会在 装饰的方法中，调用原方法
 * 且装饰类 需要定义一个对象为原行为对象 进行承接
 */
public class DecoratorModel {
}
